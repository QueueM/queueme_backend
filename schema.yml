openapi: 3.0.3
info:
  title: QueueMe API
  version: 1.0.0
  description: All endpoints for Queue Me backend services
paths:
  /ads/shop-ads/:
    get:
      operationId: ads_shop_ads_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - ads
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedShopAdsList'
          description: ''
    post:
      operationId: ads_shop_ads_create
      tags:
      - ads
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShopAds'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShopAds'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShopAds'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopAds'
          description: ''
  /ads/shop-ads-impression/:
    get:
      operationId: ads_shop_ads_impression_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - ads
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedShopAdsImpressionList'
          description: ''
    post:
      operationId: ads_shop_ads_impression_create
      tags:
      - ads
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShopAdsImpression'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShopAdsImpression'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShopAdsImpression'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopAdsImpression'
          description: ''
  /ads/shop-ads-impression/{id}/:
    get:
      operationId: ads_shop_ads_impression_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this shop ads impression model.
        required: true
      tags:
      - ads
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopAdsImpression'
          description: ''
    put:
      operationId: ads_shop_ads_impression_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this shop ads impression model.
        required: true
      tags:
      - ads
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShopAdsImpression'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShopAdsImpression'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShopAdsImpression'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopAdsImpression'
          description: ''
    patch:
      operationId: ads_shop_ads_impression_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this shop ads impression model.
        required: true
      tags:
      - ads
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedShopAdsImpression'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedShopAdsImpression'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedShopAdsImpression'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopAdsImpression'
          description: ''
    delete:
      operationId: ads_shop_ads_impression_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this shop ads impression model.
        required: true
      tags:
      - ads
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /ads/shop-ads-impression/choices/:
    get:
      operationId: ads_shop_ads_impression_choices_retrieve
      tags:
      - ads
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopAdsImpression'
          description: ''
  /ads/shop-ads/{id}/:
    get:
      operationId: ads_shop_ads_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this shop ads model.
        required: true
      tags:
      - ads
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopAds'
          description: ''
    put:
      operationId: ads_shop_ads_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this shop ads model.
        required: true
      tags:
      - ads
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShopAds'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShopAds'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShopAds'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopAds'
          description: ''
    patch:
      operationId: ads_shop_ads_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this shop ads model.
        required: true
      tags:
      - ads
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedShopAds'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedShopAds'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedShopAds'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopAds'
          description: ''
    delete:
      operationId: ads_shop_ads_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this shop ads model.
        required: true
      tags:
      - ads
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /ads/shop-ads/choices/:
    get:
      operationId: ads_shop_ads_choices_retrieve
      tags:
      - ads
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopAds'
          description: ''
  /ads/shop-ads/fetch_ad/:
    get:
      operationId: ads_shop_ads_fetch_ad_retrieve
      tags:
      - ads
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopAds'
          description: ''
  /ads/shop-ads/purchase_ad_credit/:
    post:
      operationId: ads_shop_ads_purchase_ad_credit_create
      tags:
      - ads
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShopAds'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShopAds'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShopAds'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopAds'
          description: ''
  /api/ai/churn/:
    post:
      operationId: api_ai_churn_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChurnPredictionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChurnPredictionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChurnPredictionRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChurnPredictionResponse'
          description: ''
  /api/ai/employee-performance/:
    post:
      operationId: api_ai_employee_performance_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeePerformanceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmployeePerformanceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmployeePerformanceRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeePerformanceResponse'
          description: ''
  /api/ai/forecasting/:
    post:
      operationId: api_ai_forecasting_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForecastingRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ForecastingRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ForecastingRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForecastingResponse'
          description: ''
  /api/ai/fraud/:
    post:
      operationId: api_ai_fraud_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FraudDetectionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FraudDetectionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FraudDetectionRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FraudDetectionResponse'
          description: ''
  /api/ai/image-analysis/:
    post:
      operationId: api_ai_image_analysis_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageAnalysisRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ImageAnalysisRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ImageAnalysisRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageAnalysisResponse'
          description: ''
  /api/ai/personalization/:
    post:
      operationId: api_ai_personalization_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonalizationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PersonalizationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PersonalizationRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalizationResponse'
          description: ''
  /api/ai/recommendations/:
    get:
      operationId: api_ai_recommendations_retrieve
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecommendationResponse'
          description: ''
  /api/ai/segmentation/:
    post:
      operationId: api_ai_segmentation_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerSegmentationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomerSegmentationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomerSegmentationRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerSegmentationResponse'
          description: ''
  /api/ai/sentiment/:
    post:
      operationId: api_ai_sentiment_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SentimentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SentimentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SentimentRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SentimentResponse'
          description: ''
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /auth/api/token/:
    post:
      operationId: auth_api_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /auth/api/token/refresh/:
    post:
      operationId: auth_api_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /auth/get-otp/:
    get:
      operationId: auth_get_otp_retrieve
      description: GET /get-otp/?phone_number=...&otp_type=...
      tags:
      - auth
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationOTPResponse'
          description: ''
  /auth/get-token-with-otp/:
    post:
      operationId: auth_get_token_with_otp_create
      description: POST /get-token-with-otp/
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginWithOTPRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoginWithOTPRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LoginWithOTPRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginWithOTPResponse'
          description: ''
  /auth/register/:
    post:
      operationId: auth_register_create
      description: POST /register/
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RegisterUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RegisterUserRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterUserResponse'
          description: ''
  /auth/test/:
    get:
      operationId: auth_test_retrieve
      tags:
      - auth
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestResponse'
          description: ''
  /auth/unified-login/:
    post:
      operationId: auth_unified_login_create
      description: POST /unified-login/
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedLoginRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UnifiedLoginRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UnifiedLoginRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedLoginResponse'
          description: ''
  /chat/history/:
    get:
      operationId: chat_history_list
      description: ViewSet for listing and managing chat history entries.
      parameters:
      - in: query
        name: createdAt
        schema:
          type: string
          format: date-time
      - in: query
        name: message
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: room
        schema:
          type: integer
      - in: query
        name: sent_by
        schema:
          type: integer
      tags:
      - chat
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedChatHistoryList'
          description: ''
    post:
      operationId: chat_history_create
      description: ViewSet for listing and managing chat history entries.
      tags:
      - chat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatHistory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChatHistory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChatHistory'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatHistory'
          description: ''
  /chat/history/{id}/:
    get:
      operationId: chat_history_retrieve
      description: ViewSet for listing and managing chat history entries.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this chat history model.
        required: true
      tags:
      - chat
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatHistory'
          description: ''
    put:
      operationId: chat_history_update
      description: ViewSet for listing and managing chat history entries.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this chat history model.
        required: true
      tags:
      - chat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatHistory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChatHistory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChatHistory'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatHistory'
          description: ''
    patch:
      operationId: chat_history_partial_update
      description: ViewSet for listing and managing chat history entries.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this chat history model.
        required: true
      tags:
      - chat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedChatHistory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedChatHistory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedChatHistory'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatHistory'
          description: ''
    delete:
      operationId: chat_history_destroy
      description: ViewSet for listing and managing chat history entries.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this chat history model.
        required: true
      tags:
      - chat
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /chat/history/choices/:
    get:
      operationId: chat_history_choices_retrieve
      description: ViewSet for listing and managing chat history entries.
      tags:
      - chat
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatHistory'
          description: ''
  /chat/rooms/:
    get:
      operationId: chat_rooms_list
      description: ViewSet for listing and managing chat rooms.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: shop
        schema:
          type: integer
      - in: query
        name: user
        schema:
          type: integer
      tags:
      - chat
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedChatRoomList'
          description: ''
    post:
      operationId: chat_rooms_create
      description: ViewSet for listing and managing chat rooms.
      tags:
      - chat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRoom'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChatRoom'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChatRoom'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatRoom'
          description: ''
  /chat/rooms/{id}/:
    get:
      operationId: chat_rooms_retrieve
      description: ViewSet for listing and managing chat rooms.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this chat room model.
        required: true
      tags:
      - chat
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatRoom'
          description: ''
    put:
      operationId: chat_rooms_update
      description: ViewSet for listing and managing chat rooms.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this chat room model.
        required: true
      tags:
      - chat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRoom'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChatRoom'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChatRoom'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatRoom'
          description: ''
    patch:
      operationId: chat_rooms_partial_update
      description: ViewSet for listing and managing chat rooms.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this chat room model.
        required: true
      tags:
      - chat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedChatRoom'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedChatRoom'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedChatRoom'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatRoom'
          description: ''
    delete:
      operationId: chat_rooms_destroy
      description: ViewSet for listing and managing chat rooms.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this chat room model.
        required: true
      tags:
      - chat
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /chat/rooms/choices/:
    get:
      operationId: chat_rooms_choices_retrieve
      description: ViewSet for listing and managing chat rooms.
      tags:
      - chat
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatRoom'
          description: ''
  /company/register/:
    post:
      operationId: company_register_create
      description: POST /company/register/
      tags:
      - company
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterCompanyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RegisterCompanyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RegisterCompanyRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterCompanyResponse'
          description: ''
  /customers/customers/:
    get:
      operationId: customers_customers_list
      parameters:
      - in: query
        name: address
        schema:
          type: string
      - in: query
        name: birth_date
        schema:
          type: string
          format: date
      - in: query
        name: customer_type
        schema:
          type: string
          enum:
          - new_customer
          - regular
          - vip
        description: |-
          * `regular` - Regular
          * `vip` - VIP
          * `new_customer` - New Customer
      - in: query
        name: gender
        schema:
          type: string
          nullable: true
          enum:
          - female
          - male
        description: |-
          * `male` - Male
          * `female` - Female
      - in: query
        name: name
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: phone_number
        schema:
          type: string
      - in: query
        name: preferred_services
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      - in: query
        name: query
        schema:
          type: string
      - in: query
        name: user
        schema:
          type: integer
      tags:
      - customers
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCustomersDetailsModelList'
          description: ''
    post:
      operationId: customers_customers_create
      tags:
      - customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomersDetailsModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomersDetailsModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomersDetailsModel'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomersDetailsModel'
          description: ''
  /customers/customers/{id}/:
    get:
      operationId: customers_customers_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this customers details model.
        required: true
      tags:
      - customers
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomersDetailsModel'
          description: ''
    put:
      operationId: customers_customers_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this customers details model.
        required: true
      tags:
      - customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomersDetailsModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomersDetailsModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomersDetailsModel'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomersDetailsModel'
          description: ''
    patch:
      operationId: customers_customers_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this customers details model.
        required: true
      tags:
      - customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomersDetailsModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomersDetailsModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomersDetailsModel'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomersDetailsModel'
          description: ''
    delete:
      operationId: customers_customers_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this customers details model.
        required: true
      tags:
      - customers
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /dashboard/dashboard-logs/:
    get:
      operationId: dashboard_dashboard_logs_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - dashboard
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDashboardLogList'
          description: ''
  /dashboard/dashboard-logs/{id}/:
    get:
      operationId: dashboard_dashboard_logs_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this dashboard log.
        required: true
      tags:
      - dashboard
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardLog'
          description: ''
  /dashboard/dashboard-logs/trends/:
    get:
      operationId: dashboard_dashboard_logs_trends_retrieve
      tags:
      - dashboard
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardLog'
          description: ''
  /employees/employees/:
    get:
      operationId: employees_employees_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - employees
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEmployeeDetailsList'
          description: ''
    post:
      operationId: employees_employees_create
      tags:
      - employees
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmployeeDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmployeeDetails'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeDetails'
          description: ''
  /employees/employees-roles/:
    get:
      operationId: employees_employees_roles_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - employees
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEmployeeRoleList'
          description: ''
    post:
      operationId: employees_employees_roles_create
      tags:
      - employees
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeRole'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmployeeRole'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmployeeRole'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeRole'
          description: ''
  /employees/employees-roles/{id}/:
    get:
      operationId: employees_employees_roles_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this employee role manangement
          model.
        required: true
      tags:
      - employees
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeRole'
          description: ''
    put:
      operationId: employees_employees_roles_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this employee role manangement
          model.
        required: true
      tags:
      - employees
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeRole'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmployeeRole'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmployeeRole'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeRole'
          description: ''
    patch:
      operationId: employees_employees_roles_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this employee role manangement
          model.
        required: true
      tags:
      - employees
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEmployeeRole'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEmployeeRole'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEmployeeRole'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeRole'
          description: ''
    delete:
      operationId: employees_employees_roles_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this employee role manangement
          model.
        required: true
      tags:
      - employees
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /employees/employees-roles/choices/:
    get:
      operationId: employees_employees_roles_choices_retrieve
      tags:
      - employees
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeRole'
          description: ''
  /employees/employees/{id}/:
    get:
      operationId: employees_employees_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this employee details model.
        required: true
      tags:
      - employees
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeDetails'
          description: ''
    put:
      operationId: employees_employees_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this employee details model.
        required: true
      tags:
      - employees
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmployeeDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmployeeDetails'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeDetails'
          description: ''
    patch:
      operationId: employees_employees_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this employee details model.
        required: true
      tags:
      - employees
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEmployeeDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEmployeeDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEmployeeDetails'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeDetails'
          description: ''
    delete:
      operationId: employees_employees_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this employee details model.
        required: true
      tags:
      - employees
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /employees/employees/choices/:
    get:
      operationId: employees_employees_choices_retrieve
      tags:
      - employees
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeDetails'
          description: ''
  /follow/feed/:
    get:
      operationId: follow_feed_retrieve
      description: GET /follow/feed/ → aggregated feed of reels, stories, services,
        discounts & notifications
      tags:
      - follow
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedItem'
          description: ''
  /follow/follows/:
    get:
      operationId: follow_follows_list
      description: |-
        followApp:
          POST   /follow/follows/         → follow a shop
          GET    /follow/follows/         → list your follows
          DELETE /follow/follows/{id}/    → unfollow
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - follow
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedShopFollowList'
          description: ''
    post:
      operationId: follow_follows_create
      description: |-
        followApp:
          POST   /follow/follows/         → follow a shop
          GET    /follow/follows/         → list your follows
          DELETE /follow/follows/{id}/    → unfollow
      tags:
      - follow
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShopFollow'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShopFollow'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShopFollow'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopFollow'
          description: ''
  /follow/follows/{id}/:
    get:
      operationId: follow_follows_retrieve
      description: |-
        followApp:
          POST   /follow/follows/         → follow a shop
          GET    /follow/follows/         → list your follows
          DELETE /follow/follows/{id}/    → unfollow
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this shop follow.
        required: true
      tags:
      - follow
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopFollow'
          description: ''
    put:
      operationId: follow_follows_update
      description: |-
        followApp:
          POST   /follow/follows/         → follow a shop
          GET    /follow/follows/         → list your follows
          DELETE /follow/follows/{id}/    → unfollow
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this shop follow.
        required: true
      tags:
      - follow
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShopFollow'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShopFollow'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShopFollow'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopFollow'
          description: ''
    patch:
      operationId: follow_follows_partial_update
      description: |-
        followApp:
          POST   /follow/follows/         → follow a shop
          GET    /follow/follows/         → list your follows
          DELETE /follow/follows/{id}/    → unfollow
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this shop follow.
        required: true
      tags:
      - follow
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedShopFollow'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedShopFollow'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedShopFollow'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopFollow'
          description: ''
    delete:
      operationId: follow_follows_destroy
      description: |-
        followApp:
          POST   /follow/follows/         → follow a shop
          GET    /follow/follows/         → list your follows
          DELETE /follow/follows/{id}/    → unfollow
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this shop follow.
        required: true
      tags:
      - follow
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /notifications/notifications/:
    get:
      operationId: notifications_notifications_list
      parameters:
      - in: query
        name: created_at
        schema:
          type: string
          format: date-time
      - in: query
        name: is_read
        schema:
          type: boolean
      - in: query
        name: message
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: query
        schema:
          type: string
      - in: query
        name: title
        schema:
          type: string
      - in: query
        name: user
        schema:
          type: integer
      tags:
      - notifications
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationsList'
          description: ''
    post:
      operationId: notifications_notifications_create
      tags:
      - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notifications'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Notifications'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Notifications'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notifications'
          description: ''
  /notifications/notifications/{id}/:
    get:
      operationId: notifications_notifications_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this notification model.
        required: true
      tags:
      - notifications
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notifications'
          description: ''
    put:
      operationId: notifications_notifications_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this notification model.
        required: true
      tags:
      - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notifications'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Notifications'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Notifications'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notifications'
          description: ''
    patch:
      operationId: notifications_notifications_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this notification model.
        required: true
      tags:
      - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNotifications'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNotifications'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNotifications'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notifications'
          description: ''
    delete:
      operationId: notifications_notifications_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this notification model.
        required: true
      tags:
      - notifications
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /notifications/notifications/choices/:
    get:
      operationId: notifications_notifications_choices_retrieve
      tags:
      - notifications
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notifications'
          description: ''
  /payment/create/:
    post:
      operationId: payment_create_create
      description: Initiates a payment.
      tags:
      - payment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PaymentCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PaymentCreateRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentCreateResponse'
          description: ''
  /payment/demo/:
    get:
      operationId: payment_demo_retrieve
      description: Demo endpoint for payment creation.
      tags:
      - payment
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemoPaymentResponse'
          description: ''
  /payment/process/:
    post:
      operationId: payment_process_create
      description: Verifies payment callback processing.
      tags:
      - payment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentProcessingRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PaymentProcessingRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PaymentProcessingRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentProcessingResponse'
          description: ''
  /payment/webhook/:
    post:
      operationId: payment_webhook_create
      description: Processes payment gateway webhooks.
      tags:
      - payment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebhookRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WebhookRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookResponse'
          description: ''
  /reels/comments/:
    get:
      operationId: reels_comments_list
      parameters:
      - in: query
        name: created_at_after
        schema:
          type: string
          format: date
      - in: query
        name: created_at_before
        schema:
          type: string
          format: date
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: reel
        schema:
          type: integer
      - in: query
        name: user
        schema:
          type: integer
      tags:
      - reels
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCommentList'
          description: ''
    post:
      operationId: reels_comments_create
      tags:
      - reels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
  /reels/comments/{id}/:
    get:
      operationId: reels_comments_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this comments model.
        required: true
      tags:
      - reels
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
    put:
      operationId: reels_comments_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this comments model.
        required: true
      tags:
      - reels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
    patch:
      operationId: reels_comments_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this comments model.
        required: true
      tags:
      - reels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedComment'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
    delete:
      operationId: reels_comments_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this comments model.
        required: true
      tags:
      - reels
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /reels/comments/{id}/like/:
    post:
      operationId: reels_comments_like_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this comments model.
        required: true
      tags:
      - reels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
  /reels/comments/{id}/reply/:
    post:
      operationId: reels_comments_reply_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this comments model.
        required: true
      tags:
      - reels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
  /reels/comments/choices/:
    get:
      operationId: reels_comments_choices_retrieve
      tags:
      - reels
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
  /reels/reels/:
    get:
      operationId: reels_reels_list
      parameters:
      - in: query
        name: created_at_after
        schema:
          type: string
          format: date
      - in: query
        name: created_at_before
        schema:
          type: string
          format: date
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: shop
        schema:
          type: integer
      - in: query
        name: view_count__gte
        schema:
          type: integer
      - in: query
        name: view_count__lte
        schema:
          type: integer
      tags:
      - reels
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReelList'
          description: ''
    post:
      operationId: reels_reels_create
      tags:
      - reels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Reel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Reel'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reel'
          description: ''
  /reels/reels/{id}/:
    get:
      operationId: reels_reels_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this reels model.
        required: true
      tags:
      - reels
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reel'
          description: ''
    put:
      operationId: reels_reels_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this reels model.
        required: true
      tags:
      - reels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Reel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Reel'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reel'
          description: ''
    patch:
      operationId: reels_reels_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this reels model.
        required: true
      tags:
      - reels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedReel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedReel'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reel'
          description: ''
    delete:
      operationId: reels_reels_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this reels model.
        required: true
      tags:
      - reels
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /reels/reels/{id}/increment_view/:
    post:
      operationId: reels_reels_increment_view_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this reels model.
        required: true
      tags:
      - reels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Reel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Reel'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reel'
          description: ''
  /reels/reels/{id}/like/:
    post:
      operationId: reels_reels_like_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this reels model.
        required: true
      tags:
      - reels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Reel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Reel'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reel'
          description: ''
  /reels/reels/choices/:
    get:
      operationId: reels_reels_choices_retrieve
      tags:
      - reels
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reel'
          description: ''
  /reviews/reviews/:
    get:
      operationId: reviews_reviews_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - reviews
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReviewList'
          description: ''
    post:
      operationId: reviews_reviews_create
      tags:
      - reviews
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Review'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Review'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
  /shop-service/categories/:
    get:
      operationId: shop_service_categories_list
      parameters:
      - in: query
        name: created_at
        schema:
          type: string
          format: date-time
      - in: query
        name: forecast_data
        schema:
          type: string
      - in: query
        name: name
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: query
        schema:
          type: string
      tags:
      - shop-service
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedShopServiceCategoryModelList'
          description: ''
    post:
      operationId: shop_service_categories_create
      tags:
      - shop-service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShopServiceCategoryModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShopServiceCategoryModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShopServiceCategoryModel'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopServiceCategoryModel'
          description: ''
  /shop-service/categories/{id}/:
    get:
      operationId: shop_service_categories_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Shop Service Category.
        required: true
      tags:
      - shop-service
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopServiceCategoryModel'
          description: ''
    put:
      operationId: shop_service_categories_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Shop Service Category.
        required: true
      tags:
      - shop-service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShopServiceCategoryModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShopServiceCategoryModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShopServiceCategoryModel'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopServiceCategoryModel'
          description: ''
    patch:
      operationId: shop_service_categories_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Shop Service Category.
        required: true
      tags:
      - shop-service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedShopServiceCategoryModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedShopServiceCategoryModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedShopServiceCategoryModel'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopServiceCategoryModel'
          description: ''
    delete:
      operationId: shop_service_categories_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Shop Service Category.
        required: true
      tags:
      - shop-service
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /shop-service/categories/choices/:
    get:
      operationId: shop_service_categories_choices_retrieve
      tags:
      - shop-service
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopServiceCategoryModel'
          description: ''
  /shop-service/coupons/:
    get:
      operationId: shop_service_coupons_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - shop-service
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedServiceBookingDiscountCouponsModelList'
          description: ''
    post:
      operationId: shop_service_coupons_create
      tags:
      - shop-service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceBookingDiscountCouponsModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceBookingDiscountCouponsModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceBookingDiscountCouponsModel'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceBookingDiscountCouponsModel'
          description: ''
  /shop-service/coupons/{id}/:
    get:
      operationId: shop_service_coupons_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Service Booking Discount
          Coupon.
        required: true
      tags:
      - shop-service
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceBookingDiscountCouponsModel'
          description: ''
    put:
      operationId: shop_service_coupons_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Service Booking Discount
          Coupon.
        required: true
      tags:
      - shop-service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceBookingDiscountCouponsModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceBookingDiscountCouponsModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceBookingDiscountCouponsModel'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceBookingDiscountCouponsModel'
          description: ''
    patch:
      operationId: shop_service_coupons_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Service Booking Discount
          Coupon.
        required: true
      tags:
      - shop-service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedServiceBookingDiscountCouponsModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedServiceBookingDiscountCouponsModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedServiceBookingDiscountCouponsModel'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceBookingDiscountCouponsModel'
          description: ''
    delete:
      operationId: shop_service_coupons_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Service Booking Discount
          Coupon.
        required: true
      tags:
      - shop-service
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /shop-service/coupons/choices/:
    get:
      operationId: shop_service_coupons_choices_retrieve
      tags:
      - shop-service
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceBookingDiscountCouponsModel'
          description: ''
  /shop-service/gallery/:
    get:
      operationId: shop_service_gallery_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: service
        schema:
          type: integer
      tags:
      - shop-service
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedShopServiceGalleryModelList'
          description: ''
    post:
      operationId: shop_service_gallery_create
      tags:
      - shop-service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShopServiceGalleryModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShopServiceGalleryModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShopServiceGalleryModel'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopServiceGalleryModel'
          description: ''
  /shop-service/gallery/{id}/:
    get:
      operationId: shop_service_gallery_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Shop Service Gallery
          Item.
        required: true
      tags:
      - shop-service
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopServiceGalleryModel'
          description: ''
    put:
      operationId: shop_service_gallery_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Shop Service Gallery
          Item.
        required: true
      tags:
      - shop-service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShopServiceGalleryModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShopServiceGalleryModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShopServiceGalleryModel'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopServiceGalleryModel'
          description: ''
    patch:
      operationId: shop_service_gallery_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Shop Service Gallery
          Item.
        required: true
      tags:
      - shop-service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedShopServiceGalleryModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedShopServiceGalleryModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedShopServiceGalleryModel'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopServiceGalleryModel'
          description: ''
    delete:
      operationId: shop_service_gallery_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Shop Service Gallery
          Item.
        required: true
      tags:
      - shop-service
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /shop-service/gallery/choices/:
    get:
      operationId: shop_service_gallery_choices_retrieve
      tags:
      - shop-service
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopServiceGalleryModel'
          description: ''
  /shop-service/service-extended-details/:
    get:
      operationId: shop_service_service_extended_details_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - shop-service
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedServiceExtendedDetailsModelList'
          description: ''
    post:
      operationId: shop_service_service_extended_details_create
      tags:
      - shop-service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceExtendedDetailsModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceExtendedDetailsModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceExtendedDetailsModel'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceExtendedDetailsModel'
          description: ''
  /shop-service/service-extended-details/{id}/:
    get:
      operationId: shop_service_service_extended_details_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Service Extended Detail.
        required: true
      tags:
      - shop-service
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceExtendedDetailsModel'
          description: ''
    put:
      operationId: shop_service_service_extended_details_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Service Extended Detail.
        required: true
      tags:
      - shop-service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceExtendedDetailsModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceExtendedDetailsModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceExtendedDetailsModel'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceExtendedDetailsModel'
          description: ''
    patch:
      operationId: shop_service_service_extended_details_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Service Extended Detail.
        required: true
      tags:
      - shop-service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedServiceExtendedDetailsModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedServiceExtendedDetailsModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedServiceExtendedDetailsModel'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceExtendedDetailsModel'
          description: ''
    delete:
      operationId: shop_service_service_extended_details_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Service Extended Detail.
        required: true
      tags:
      - shop-service
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /shop-service/service-extended-details/choices/:
    get:
      operationId: shop_service_service_extended_details_choices_retrieve
      tags:
      - shop-service
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceExtendedDetailsModel'
          description: ''
  /shop-service/services/:
    get:
      operationId: shop_service_services_list
      parameters:
      - in: query
        name: category
        schema:
          type: integer
      - in: query
        name: description
        schema:
          type: string
      - in: query
        name: duration
        schema:
          type: string
          format: duration
      - in: query
        name: is_available
        schema:
          type: boolean
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: name_arabic
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: price
        schema:
          type: number
      - in: query
        name: query
        schema:
          type: string
      - in: query
        name: service_type
        schema:
          type: string
          enum:
          - at_home
          - both
          - in_shop
        description: |-
          * `in_shop` - In Shop
          * `at_home` - At Home
          * `both` - Both
      - in: query
        name: shop
        schema:
          type: integer
      - in: query
        name: specialists
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      tags:
      - shop-service
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedShopServiceDetailsModelList'
          description: ''
    post:
      operationId: shop_service_services_create
      tags:
      - shop-service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShopServiceDetailsModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShopServiceDetailsModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShopServiceDetailsModel'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopServiceDetailsModel'
          description: ''
  /shop-service/services-bookings/:
    get:
      operationId: shop_service_services_bookings_list
      parameters:
      - in: query
        name: booking_date_after
        schema:
          type: string
          format: date
      - in: query
        name: booking_date_before
        schema:
          type: string
          format: date
      - in: query
        name: booking_time
        schema:
          type: string
          format: time
      - in: query
        name: customer
        schema:
          type: integer
      - in: query
        name: final_amount
        schema:
          type: number
      - in: query
        name: fraud_flag
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: payment_status
        schema:
          type: string
          enum:
          - paid
          - pending
          - unpaid
        description: |-
          * `unpaid` - Unpaid
          * `pending` - Pending
          * `paid` - Paid
      - in: query
        name: price
        schema:
          type: number
      - in: query
        name: query
        schema:
          type: string
      - in: query
        name: service
        schema:
          type: integer
      - in: query
        name: status
        schema:
          type: string
          enum:
          - booked
          - cancelled
          - completed
          - requested
        description: |-
          * `requested` - Requested
          * `booked` - Booked
          * `completed` - Completed
          * `cancelled` - Cancelled
      - in: query
        name: user
        schema:
          type: integer
      tags:
      - shop-service
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedServiceBookingDetailsModelList'
          description: ''
    post:
      operationId: shop_service_services_bookings_create
      tags:
      - shop-service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceBookingDetailsModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceBookingDetailsModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceBookingDetailsModel'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceBookingDetailsModel'
          description: ''
  /shop-service/services-bookings/{id}/:
    get:
      operationId: shop_service_services_bookings_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Service Booking Detail.
        required: true
      tags:
      - shop-service
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceBookingDetailsModel'
          description: ''
    put:
      operationId: shop_service_services_bookings_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Service Booking Detail.
        required: true
      tags:
      - shop-service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceBookingDetailsModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceBookingDetailsModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceBookingDetailsModel'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceBookingDetailsModel'
          description: ''
    patch:
      operationId: shop_service_services_bookings_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Service Booking Detail.
        required: true
      tags:
      - shop-service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedServiceBookingDetailsModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedServiceBookingDetailsModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedServiceBookingDetailsModel'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceBookingDetailsModel'
          description: ''
    delete:
      operationId: shop_service_services_bookings_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Service Booking Detail.
        required: true
      tags:
      - shop-service
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /shop-service/services-bookings/choices/:
    get:
      operationId: shop_service_services_bookings_choices_retrieve
      tags:
      - shop-service
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceBookingDetailsModel'
          description: ''
  /shop-service/services/{id}/:
    get:
      operationId: shop_service_services_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Shop Service Detail.
        required: true
      tags:
      - shop-service
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopServiceDetailsModel'
          description: ''
    put:
      operationId: shop_service_services_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Shop Service Detail.
        required: true
      tags:
      - shop-service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShopServiceDetailsModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShopServiceDetailsModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShopServiceDetailsModel'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopServiceDetailsModel'
          description: ''
    patch:
      operationId: shop_service_services_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Shop Service Detail.
        required: true
      tags:
      - shop-service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedShopServiceDetailsModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedShopServiceDetailsModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedShopServiceDetailsModel'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopServiceDetailsModel'
          description: ''
    delete:
      operationId: shop_service_services_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Shop Service Detail.
        required: true
      tags:
      - shop-service
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /shop-service/services/choices/:
    get:
      operationId: shop_service_services_choices_retrieve
      tags:
      - shop-service
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopServiceDetailsModel'
          description: ''
  /shops/gallery/:
    get:
      operationId: shops_gallery_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - shops
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedShopGalleryImagesModelList'
          description: ''
    post:
      operationId: shops_gallery_create
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShopGalleryImagesModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShopGalleryImagesModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShopGalleryImagesModel'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopGalleryImagesModel'
          description: ''
  /shops/gallery/{id}/:
    get:
      operationId: shops_gallery_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Shop Gallery Image.
        required: true
      tags:
      - shops
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopGalleryImagesModel'
          description: ''
    put:
      operationId: shops_gallery_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Shop Gallery Image.
        required: true
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShopGalleryImagesModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShopGalleryImagesModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShopGalleryImagesModel'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopGalleryImagesModel'
          description: ''
    patch:
      operationId: shops_gallery_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Shop Gallery Image.
        required: true
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedShopGalleryImagesModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedShopGalleryImagesModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedShopGalleryImagesModel'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopGalleryImagesModel'
          description: ''
    delete:
      operationId: shops_gallery_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Shop Gallery Image.
        required: true
      tags:
      - shops
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /shops/service/categories/:
    get:
      operationId: shops_service_categories_list
      parameters:
      - in: query
        name: created_at
        schema:
          type: string
          format: date-time
      - in: query
        name: forecast_data
        schema:
          type: string
      - in: query
        name: name
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: query
        schema:
          type: string
      tags:
      - shops
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedShopServiceCategoryModelList'
          description: ''
    post:
      operationId: shops_service_categories_create
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShopServiceCategoryModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShopServiceCategoryModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShopServiceCategoryModel'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopServiceCategoryModel'
          description: ''
  /shops/service/categories/{id}/:
    get:
      operationId: shops_service_categories_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Shop Service Category.
        required: true
      tags:
      - shops
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopServiceCategoryModel'
          description: ''
    put:
      operationId: shops_service_categories_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Shop Service Category.
        required: true
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShopServiceCategoryModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShopServiceCategoryModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShopServiceCategoryModel'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopServiceCategoryModel'
          description: ''
    patch:
      operationId: shops_service_categories_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Shop Service Category.
        required: true
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedShopServiceCategoryModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedShopServiceCategoryModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedShopServiceCategoryModel'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopServiceCategoryModel'
          description: ''
    delete:
      operationId: shops_service_categories_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Shop Service Category.
        required: true
      tags:
      - shops
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /shops/service/categories/choices/:
    get:
      operationId: shops_service_categories_choices_retrieve
      tags:
      - shops
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopServiceCategoryModel'
          description: ''
  /shops/service/coupons/:
    get:
      operationId: shops_service_coupons_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - shops
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedServiceBookingDiscountCouponsModelList'
          description: ''
    post:
      operationId: shops_service_coupons_create
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceBookingDiscountCouponsModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceBookingDiscountCouponsModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceBookingDiscountCouponsModel'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceBookingDiscountCouponsModel'
          description: ''
  /shops/service/coupons/{id}/:
    get:
      operationId: shops_service_coupons_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Service Booking Discount
          Coupon.
        required: true
      tags:
      - shops
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceBookingDiscountCouponsModel'
          description: ''
    put:
      operationId: shops_service_coupons_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Service Booking Discount
          Coupon.
        required: true
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceBookingDiscountCouponsModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceBookingDiscountCouponsModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceBookingDiscountCouponsModel'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceBookingDiscountCouponsModel'
          description: ''
    patch:
      operationId: shops_service_coupons_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Service Booking Discount
          Coupon.
        required: true
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedServiceBookingDiscountCouponsModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedServiceBookingDiscountCouponsModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedServiceBookingDiscountCouponsModel'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceBookingDiscountCouponsModel'
          description: ''
    delete:
      operationId: shops_service_coupons_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Service Booking Discount
          Coupon.
        required: true
      tags:
      - shops
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /shops/service/coupons/choices/:
    get:
      operationId: shops_service_coupons_choices_retrieve
      tags:
      - shops
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceBookingDiscountCouponsModel'
          description: ''
  /shops/service/gallery/:
    get:
      operationId: shops_service_gallery_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: service
        schema:
          type: integer
      tags:
      - shops
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedShopServiceGalleryModelList'
          description: ''
    post:
      operationId: shops_service_gallery_create
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShopServiceGalleryModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShopServiceGalleryModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShopServiceGalleryModel'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopServiceGalleryModel'
          description: ''
  /shops/service/gallery/{id}/:
    get:
      operationId: shops_service_gallery_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Shop Service Gallery
          Item.
        required: true
      tags:
      - shops
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopServiceGalleryModel'
          description: ''
    put:
      operationId: shops_service_gallery_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Shop Service Gallery
          Item.
        required: true
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShopServiceGalleryModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShopServiceGalleryModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShopServiceGalleryModel'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopServiceGalleryModel'
          description: ''
    patch:
      operationId: shops_service_gallery_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Shop Service Gallery
          Item.
        required: true
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedShopServiceGalleryModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedShopServiceGalleryModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedShopServiceGalleryModel'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopServiceGalleryModel'
          description: ''
    delete:
      operationId: shops_service_gallery_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Shop Service Gallery
          Item.
        required: true
      tags:
      - shops
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /shops/service/gallery/choices/:
    get:
      operationId: shops_service_gallery_choices_retrieve
      tags:
      - shops
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopServiceGalleryModel'
          description: ''
  /shops/service/service-extended-details/:
    get:
      operationId: shops_service_service_extended_details_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - shops
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedServiceExtendedDetailsModelList'
          description: ''
    post:
      operationId: shops_service_service_extended_details_create
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceExtendedDetailsModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceExtendedDetailsModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceExtendedDetailsModel'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceExtendedDetailsModel'
          description: ''
  /shops/service/service-extended-details/{id}/:
    get:
      operationId: shops_service_service_extended_details_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Service Extended Detail.
        required: true
      tags:
      - shops
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceExtendedDetailsModel'
          description: ''
    put:
      operationId: shops_service_service_extended_details_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Service Extended Detail.
        required: true
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceExtendedDetailsModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceExtendedDetailsModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceExtendedDetailsModel'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceExtendedDetailsModel'
          description: ''
    patch:
      operationId: shops_service_service_extended_details_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Service Extended Detail.
        required: true
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedServiceExtendedDetailsModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedServiceExtendedDetailsModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedServiceExtendedDetailsModel'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceExtendedDetailsModel'
          description: ''
    delete:
      operationId: shops_service_service_extended_details_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Service Extended Detail.
        required: true
      tags:
      - shops
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /shops/service/service-extended-details/choices/:
    get:
      operationId: shops_service_service_extended_details_choices_retrieve
      tags:
      - shops
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceExtendedDetailsModel'
          description: ''
  /shops/service/services/:
    get:
      operationId: shops_service_services_list
      parameters:
      - in: query
        name: category
        schema:
          type: integer
      - in: query
        name: description
        schema:
          type: string
      - in: query
        name: duration
        schema:
          type: string
          format: duration
      - in: query
        name: is_available
        schema:
          type: boolean
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: name_arabic
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: price
        schema:
          type: number
      - in: query
        name: query
        schema:
          type: string
      - in: query
        name: service_type
        schema:
          type: string
          enum:
          - at_home
          - both
          - in_shop
        description: |-
          * `in_shop` - In Shop
          * `at_home` - At Home
          * `both` - Both
      - in: query
        name: shop
        schema:
          type: integer
      - in: query
        name: specialists
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      tags:
      - shops
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedShopServiceDetailsModelList'
          description: ''
    post:
      operationId: shops_service_services_create
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShopServiceDetailsModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShopServiceDetailsModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShopServiceDetailsModel'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopServiceDetailsModel'
          description: ''
  /shops/service/services-bookings/:
    get:
      operationId: shops_service_services_bookings_list
      parameters:
      - in: query
        name: booking_date_after
        schema:
          type: string
          format: date
      - in: query
        name: booking_date_before
        schema:
          type: string
          format: date
      - in: query
        name: booking_time
        schema:
          type: string
          format: time
      - in: query
        name: customer
        schema:
          type: integer
      - in: query
        name: final_amount
        schema:
          type: number
      - in: query
        name: fraud_flag
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: payment_status
        schema:
          type: string
          enum:
          - paid
          - pending
          - unpaid
        description: |-
          * `unpaid` - Unpaid
          * `pending` - Pending
          * `paid` - Paid
      - in: query
        name: price
        schema:
          type: number
      - in: query
        name: query
        schema:
          type: string
      - in: query
        name: service
        schema:
          type: integer
      - in: query
        name: status
        schema:
          type: string
          enum:
          - booked
          - cancelled
          - completed
          - requested
        description: |-
          * `requested` - Requested
          * `booked` - Booked
          * `completed` - Completed
          * `cancelled` - Cancelled
      - in: query
        name: user
        schema:
          type: integer
      tags:
      - shops
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedServiceBookingDetailsModelList'
          description: ''
    post:
      operationId: shops_service_services_bookings_create
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceBookingDetailsModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceBookingDetailsModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceBookingDetailsModel'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceBookingDetailsModel'
          description: ''
  /shops/service/services-bookings/{id}/:
    get:
      operationId: shops_service_services_bookings_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Service Booking Detail.
        required: true
      tags:
      - shops
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceBookingDetailsModel'
          description: ''
    put:
      operationId: shops_service_services_bookings_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Service Booking Detail.
        required: true
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceBookingDetailsModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceBookingDetailsModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceBookingDetailsModel'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceBookingDetailsModel'
          description: ''
    patch:
      operationId: shops_service_services_bookings_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Service Booking Detail.
        required: true
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedServiceBookingDetailsModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedServiceBookingDetailsModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedServiceBookingDetailsModel'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceBookingDetailsModel'
          description: ''
    delete:
      operationId: shops_service_services_bookings_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Service Booking Detail.
        required: true
      tags:
      - shops
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /shops/service/services-bookings/choices/:
    get:
      operationId: shops_service_services_bookings_choices_retrieve
      tags:
      - shops
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceBookingDetailsModel'
          description: ''
  /shops/service/services/{id}/:
    get:
      operationId: shops_service_services_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Shop Service Detail.
        required: true
      tags:
      - shops
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopServiceDetailsModel'
          description: ''
    put:
      operationId: shops_service_services_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Shop Service Detail.
        required: true
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShopServiceDetailsModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShopServiceDetailsModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShopServiceDetailsModel'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopServiceDetailsModel'
          description: ''
    patch:
      operationId: shops_service_services_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Shop Service Detail.
        required: true
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedShopServiceDetailsModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedShopServiceDetailsModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedShopServiceDetailsModel'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopServiceDetailsModel'
          description: ''
    delete:
      operationId: shops_service_services_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Shop Service Detail.
        required: true
      tags:
      - shops
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /shops/service/services/choices/:
    get:
      operationId: shops_service_services_choices_retrieve
      tags:
      - shops
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopServiceDetailsModel'
          description: ''
  /shops/shops/:
    get:
      operationId: shops_shops_list
      description: |-
        Manage shops. We provide a top‑level queryset and
        lookup_value_regex so Spectacular infers <pk> is int.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - shops
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedShopDetailsModelList'
          description: ''
    post:
      operationId: shops_shops_create
      description: |-
        Manage shops. We provide a top‑level queryset and
        lookup_value_regex so Spectacular infers <pk> is int.
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShopDetailsModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShopDetailsModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShopDetailsModel'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopDetailsModel'
          description: ''
  /shops/shops/{id}/:
    get:
      operationId: shops_shops_retrieve
      description: |-
        Manage shops. We provide a top‑level queryset and
        lookup_value_regex so Spectacular infers <pk> is int.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - shops
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopDetailsModel'
          description: ''
    put:
      operationId: shops_shops_update
      description: |-
        Manage shops. We provide a top‑level queryset and
        lookup_value_regex so Spectacular infers <pk> is int.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShopDetailsModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShopDetailsModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShopDetailsModel'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopDetailsModel'
          description: ''
    patch:
      operationId: shops_shops_partial_update
      description: |-
        Manage shops. We provide a top‑level queryset and
        lookup_value_regex so Spectacular infers <pk> is int.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedShopDetailsModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedShopDetailsModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedShopDetailsModel'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopDetailsModel'
          description: ''
    delete:
      operationId: shops_shops_destroy
      description: |-
        Manage shops. We provide a top‑level queryset and
        lookup_value_regex so Spectacular infers <pk> is int.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - shops
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /shops/specialists/:
    get:
      operationId: shops_specialists_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - shops
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedShopSpecialistDetailsModelList'
          description: ''
    post:
      operationId: shops_specialists_create
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShopSpecialistDetailsModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShopSpecialistDetailsModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShopSpecialistDetailsModel'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopSpecialistDetailsModel'
          description: ''
  /shops/specialists-types/:
    get:
      operationId: shops_specialists_types_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - shops
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSpecialistTypesList'
          description: ''
    post:
      operationId: shops_specialists_types_create
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpecialistTypes'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SpecialistTypes'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SpecialistTypes'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpecialistTypes'
          description: ''
  /shops/specialists-types/{id}/:
    get:
      operationId: shops_specialists_types_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Specialist Type.
        required: true
      tags:
      - shops
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpecialistTypes'
          description: ''
    put:
      operationId: shops_specialists_types_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Specialist Type.
        required: true
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpecialistTypes'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SpecialistTypes'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SpecialistTypes'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpecialistTypes'
          description: ''
    patch:
      operationId: shops_specialists_types_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Specialist Type.
        required: true
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSpecialistTypes'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSpecialistTypes'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSpecialistTypes'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpecialistTypes'
          description: ''
    delete:
      operationId: shops_specialists_types_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Specialist Type.
        required: true
      tags:
      - shops
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /shops/specialists/{id}/:
    get:
      operationId: shops_specialists_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Shop Specialist Detail.
        required: true
      tags:
      - shops
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopSpecialistDetailsModel'
          description: ''
    put:
      operationId: shops_specialists_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Shop Specialist Detail.
        required: true
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShopSpecialistDetailsModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShopSpecialistDetailsModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShopSpecialistDetailsModel'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopSpecialistDetailsModel'
          description: ''
    patch:
      operationId: shops_specialists_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Shop Specialist Detail.
        required: true
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedShopSpecialistDetailsModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedShopSpecialistDetailsModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedShopSpecialistDetailsModel'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopSpecialistDetailsModel'
          description: ''
    delete:
      operationId: shops_specialists_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Shop Specialist Detail.
        required: true
      tags:
      - shops
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /stories/stories/:
    get:
      operationId: stories_stories_list
      parameters:
      - in: query
        name: ai_video_tags
        schema:
          type: string
      - in: query
        name: analytics_data
        schema:
          type: string
      - in: query
        name: caption
        schema:
          type: string
      - in: query
        name: created_at
        schema:
          type: string
          format: date-time
      - in: query
        name: expires_at
        schema:
          type: string
          format: date-time
      - in: query
        name: image
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: shop
        schema:
          type: integer
      - in: query
        name: video
        schema:
          type: string
      - in: query
        name: view_count
        schema:
          type: integer
      - in: query
        name: viewed_by
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      tags:
      - stories
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStoryList'
          description: ''
    post:
      operationId: stories_stories_create
      tags:
      - stories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Story'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Story'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Story'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Story'
          description: ''
  /stories/stories/{id}/:
    get:
      operationId: stories_stories_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this story model.
        required: true
      tags:
      - stories
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Story'
          description: ''
    put:
      operationId: stories_stories_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this story model.
        required: true
      tags:
      - stories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Story'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Story'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Story'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Story'
          description: ''
    patch:
      operationId: stories_stories_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this story model.
        required: true
      tags:
      - stories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStory'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Story'
          description: ''
    delete:
      operationId: stories_stories_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this story model.
        required: true
      tags:
      - stories
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /stories/stories/{id}/mark_viewed/:
    post:
      operationId: stories_stories_mark_viewed_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this story model.
        required: true
      tags:
      - stories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Story'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Story'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Story'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Story'
          description: ''
  /stories/stories/active_stories/:
    get:
      operationId: stories_stories_active_stories_retrieve
      tags:
      - stories
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Story'
          description: ''
  /subscriptions/integrate-payment/:
    post:
      operationId: subscriptions_integrate_payment_create
      description: |-
        POST /subscription/integrate-payment/
        Integrates a completed payment with a company's subscription.
      tags:
      - subscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionPaymentIntegrationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SubscriptionPaymentIntegrationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SubscriptionPaymentIntegrationRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionPaymentIntegrationResponse'
          description: ''
  /subscriptions/plans/{plan_id}/:
    get:
      operationId: subscriptions_plans_retrieve
      description: |-
        GET /subscription/plans/{plan_id}/
        Retrieves detailed info about a specific subscription plan.
      parameters:
      - in: path
        name: plan_id
        schema:
          type: integer
        required: true
      tags:
      - subscriptions
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanySubscriptionPlan'
          description: ''
  /users/master-details/:
    get:
      operationId: users_master_details_retrieve
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserMasterDetailsResponse'
          description: ''
  /users/register/:
    post:
      operationId: users_register_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersAppRegisterUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsersAppRegisterUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UsersAppRegisterUserRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersAppRegisterUserResponse'
          description: ''
  /users/update-profile-suggest/:
    post:
      operationId: users_update_profile_suggest_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfileSuggestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateProfileSuggestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateProfileSuggestRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProfileSuggestResponse'
          description: ''
components:
  schemas:
    BillingCycleEnum:
      enum:
      - monthly
      - yearly
      type: string
      description: |-
        * `monthly` - monthly
        * `yearly` - yearly
    BlankEnum:
      enum:
      - ''
    ChatHistory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        bot_response:
          type: string
          readOnly: true
        sent_by:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        message:
          type: string
        createdAt:
          type: string
          format: date-time
          readOnly: true
        room:
          type: integer
      required:
      - bot_response
      - createdAt
      - id
      - message
      - room
      - sent_by
    ChatRoom:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        shop:
          type: integer
      required:
      - id
      - shop
      - user
    ChurnPredictionRequest:
      type: object
      properties:
        customer_id:
          type: integer
        history: {}
      required:
      - customer_id
      - history
    ChurnPredictionResponse:
      type: object
      properties:
        will_churn:
          type: boolean
        score:
          type: number
          format: double
      required:
      - score
      - will_churn
    Comment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          readOnly: true
        reel:
          type: integer
        text:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        like_count:
          type: integer
          readOnly: true
        parent:
          type: integer
          nullable: true
        replies:
          type: object
          additionalProperties: {}
          description: Return nested list of reply comments.
          readOnly: true
      required:
      - created_at
      - id
      - like_count
      - reel
      - replies
      - text
      - user
    CompanyDetailsModel:
      type: object
      description: Serializer for CompanyDetailsModel instances.
      properties:
        user:
          type: integer
        name:
          type: string
          maxLength: 300
        company_image:
          type: string
          format: uri
          nullable: true
        description:
          type: string
          nullable: true
        address:
          type: string
          nullable: true
        is_verified:
          type: boolean
        status:
          $ref: '#/components/schemas/CompanyDetailsModelStatusEnum'
        shops_limit:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        merchant_type:
          $ref: '#/components/schemas/MerchantTypeEnum'
        name_arabic:
          type: string
          maxLength: 300
        registration_document:
          type: string
          format: uri
          nullable: true
        tax_number:
          type: string
          maxLength: 30
        online_payment_global_enabled:
          type: boolean
          description: If enabled, all shops for this company will be eligible for
            online payments.
        forecast_data:
          nullable: true
          description: AI forecast metadata (will JSON‑encode datetimes/timestamps)
        fraud_flag:
          type: boolean
          description: Flag if potential fraud detected
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Creation timestamp
      required:
      - created_at
      - name
      - user
    CompanyDetailsModelStatusEnum:
      enum:
      - accepted
      - rejected
      - created
      type: string
      description: |-
        * `accepted` - Accepted
        * `rejected` - Rejected
        * `created` - Created
    CompanySubscriptionPlan:
      type: object
      description: Serializer for subscription plan definitions.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        price:
          type: number
          format: double
        duration_days:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        description:
          type: string
      required:
      - description
      - duration_days
      - id
      - name
      - price
    CustomerSegmentationRequest:
      type: object
      properties:
        shop_id:
          type: integer
      required:
      - shop_id
    CustomerSegmentationResponse:
      type: object
      properties:
        segments:
          type: array
          items:
            type: object
            additionalProperties: {}
      required:
      - segments
    CustomerTypeEnum:
      enum:
      - regular
      - vip
      - new_customer
      type: string
      description: |-
        * `regular` - Regular
        * `vip` - VIP
        * `new_customer` - New Customer
    CustomersDetailsModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 300
        phone_number:
          type: string
          nullable: true
          maxLength: 20
        birth_date:
          type: string
          format: date
          nullable: true
        gender:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/GenderEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        profile_photo:
          type: string
          format: uri
          nullable: true
        customer_type:
          $ref: '#/components/schemas/CustomerTypeEnum'
        address:
          type: string
          nullable: true
        user:
          type: integer
          nullable: true
        preferred_services:
          type: array
          items:
            type: integer
      required:
      - id
      - name
    CustomersTypeEnum:
      enum:
      - male
      - female
      - both
      type: string
      description: |-
        * `male` - Male
        * `female` - Female
        * `both` - Both
    DashboardLog:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        timestamp:
          type: string
          format: date-time
          readOnly: true
        company:
          type: integer
          readOnly: true
        company_name:
          type: string
          readOnly: true
        shop:
          type: integer
          readOnly: true
          nullable: true
        branch_name:
          type: string
          readOnly: true
          default: ''
        total_bookings:
          type: integer
          readOnly: true
        total_revenue:
          type: number
          format: double
          readOnly: true
        total_specialists:
          type: integer
          readOnly: true
        total_waiting:
          type: integer
          readOnly: true
        total_in_progress:
          type: integer
          readOnly: true
        total_completed:
          type: integer
          readOnly: true
        total_cancelled:
          type: integer
          readOnly: true
        estimated_wait_time:
          type: string
          readOnly: true
        total_employees:
          type: integer
          readOnly: true
        average_salary:
          type: number
          format: double
          readOnly: true
        total_customers:
          type: integer
          readOnly: true
        customer_retention_rate:
          type: number
          format: double
          readOnly: true
        average_rating:
          type: number
          format: double
          readOnly: true
        total_reels_likes:
          type: integer
          readOnly: true
        total_ad_impressions:
          type: integer
          readOnly: true
        total_ad_viewers:
          type: integer
          readOnly: true
        total_ad_clicks:
          type: integer
          readOnly: true
        total_stories:
          type: integer
          readOnly: true
        total_story_likes:
          type: integer
          readOnly: true
        total_reels:
          type: integer
          readOnly: true
        total_comments_per_reel:
          type: integer
          readOnly: true
        top_services:
          readOnly: true
      required:
      - average_rating
      - average_salary
      - branch_name
      - company
      - company_name
      - customer_retention_rate
      - estimated_wait_time
      - id
      - shop
      - timestamp
      - top_services
      - total_ad_clicks
      - total_ad_impressions
      - total_ad_viewers
      - total_bookings
      - total_cancelled
      - total_comments_per_reel
      - total_completed
      - total_customers
      - total_employees
      - total_in_progress
      - total_reels
      - total_reels_likes
      - total_revenue
      - total_specialists
      - total_stories
      - total_story_likes
      - total_waiting
    DayEnum:
      enum:
      - monday
      - tuesday
      - wednesday
      - thursday
      - friday
      - saturday
      - sunday
      type: string
      description: |-
        * `monday` - Monday
        * `tuesday` - Tuesday
        * `wednesday` - Wednesday
        * `thursday` - Thursday
        * `friday` - Friday
        * `saturday` - Saturday
        * `sunday` - Sunday
    DemoPaymentResponse:
      type: object
      properties:
        demo_payment:
          type: object
          additionalProperties: {}
        payment_record_id:
          type: integer
      required:
      - demo_payment
      - payment_record_id
    DiscountTypeEnum:
      enum:
      - percentage
      - amount
      type: string
      description: |-
        * `percentage` - Percentage
        * `amount` - Amount
    EmployeeDetails:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        working_hours:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeWorkingHours'
        roles:
          type: object
          additionalProperties: {}
          description: Return a list of role objects for this employee.
          readOnly: true
        name:
          type: string
          maxLength: 200
        position:
          type: string
          maxLength: 100
        salary:
          type: number
          format: double
        ai_performance_data:
          nullable: true
          description: AI performance analysis data
        created_at:
          type: string
          format: date-time
          readOnly: true
        user:
          type: integer
        company:
          type: integer
        shop:
          type: integer
      required:
      - created_at
      - id
      - name
      - roles
      - shop
      - working_hours
    EmployeePerformanceRequest:
      type: object
      properties:
        employee_id:
          type: integer
        period:
          type: string
      required:
      - employee_id
      - period
    EmployeePerformanceResponse:
      type: object
      properties:
        performance_score:
          type: number
          format: double
        metrics:
          type: object
          additionalProperties:
            type: number
            format: double
      required:
      - metrics
      - performance_score
    EmployeeRole:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        role:
          type: string
          maxLength: 100
        permissions:
          description: Permissions for the role
        employee:
          type: integer
        shop:
          type: integer
      required:
      - id
      - shop
    EmployeeWorkingHours:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        day:
          type: string
          maxLength: 20
        start_time:
          type: string
          format: time
        end_time:
          type: string
          format: time
      required:
      - day
      - end_time
      - id
      - start_time
    FeedItem:
      type: object
      properties:
        id:
          type: integer
        content_type:
          type: string
        created_at:
          type: string
          format: date-time
        data:
          type: object
          additionalProperties: {}
      required:
      - content_type
      - created_at
      - data
      - id
    ForecastingRequest:
      type: object
      properties:
        shop_id:
          type: integer
        horizon:
          type: integer
      required:
      - horizon
      - shop_id
    ForecastingResponse:
      type: object
      properties:
        forecast:
          type: array
          items:
            type: object
            additionalProperties: {}
      required:
      - forecast
    FraudDetectionRequest:
      type: object
      properties:
        transaction_id:
          type: string
        amount:
          type: number
          format: double
      required:
      - amount
      - transaction_id
    FraudDetectionResponse:
      type: object
      properties:
        is_fraud:
          type: boolean
        probability:
          type: number
          format: double
      required:
      - is_fraud
      - probability
    GenderEnum:
      enum:
      - male
      - female
      type: string
      description: |-
        * `male` - Male
        * `female` - Female
    ImageAnalysisRequest:
      type: object
      properties:
        image_url:
          type: string
          format: uri
      required:
      - image_url
    ImageAnalysisResponse:
      type: object
      properties:
        analysis: {}
      required:
      - analysis
    ImpressionTypeEnum:
      enum:
      - click
      - view
      type: string
      description: |-
        * `click` - Click
        * `view` - View
    LoginWithOTPRequest:
      type: object
      properties:
        phone_number:
          type: string
        otp:
          type: string
      required:
      - otp
      - phone_number
    LoginWithOTPResponse:
      type: object
      properties:
        user_details:
          type: object
          additionalProperties: {}
        access:
          type: string
        refresh:
          type: string
        customer_details:
          type: object
          additionalProperties: {}
          nullable: true
        company_details:
          type: object
          additionalProperties: {}
          nullable: true
        employee_details:
          type: object
          additionalProperties: {}
          nullable: true
      required:
      - access
      - company_details
      - customer_details
      - employee_details
      - refresh
      - user_details
    MerchantTypeEnum:
      enum:
      - freelance
      - shop
      type: string
      description: |-
        * `freelance` - Freelance
        * `shop` - Shop
    Notifications:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        message:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        is_read:
          type: boolean
        user:
          type: integer
      required:
      - created_at
      - id
      - message
      - title
      - user
    NullEnum:
      enum:
      - null
    OnlinePaymentStatusEnum:
      enum:
      - pending
      - approved
      - rejected
      type: string
      description: |-
        * `pending` - Pending
        * `approved` - Approved
        * `rejected` - Rejected
    PaginatedChatHistoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ChatHistory'
    PaginatedChatRoomList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ChatRoom'
    PaginatedCommentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
    PaginatedCustomersDetailsModelList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CustomersDetailsModel'
    PaginatedDashboardLogList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/DashboardLog'
    PaginatedEmployeeDetailsList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeDetails'
    PaginatedEmployeeRoleList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeRole'
    PaginatedNotificationsList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Notifications'
    PaginatedReelList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Reel'
    PaginatedReviewList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Review'
    PaginatedServiceBookingDetailsModelList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ServiceBookingDetailsModel'
    PaginatedServiceBookingDiscountCouponsModelList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ServiceBookingDiscountCouponsModel'
    PaginatedServiceExtendedDetailsModelList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ServiceExtendedDetailsModel'
    PaginatedShopAdsImpressionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ShopAdsImpression'
    PaginatedShopAdsList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ShopAds'
    PaginatedShopDetailsModelList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ShopDetailsModel'
    PaginatedShopFollowList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ShopFollow'
    PaginatedShopGalleryImagesModelList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ShopGalleryImagesModel'
    PaginatedShopServiceCategoryModelList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ShopServiceCategoryModel'
    PaginatedShopServiceDetailsModelList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ShopServiceDetailsModel'
    PaginatedShopServiceGalleryModelList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ShopServiceGalleryModel'
    PaginatedShopSpecialistDetailsModelList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ShopSpecialistDetailsModel'
    PaginatedSpecialistTypesList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/SpecialistTypes'
    PaginatedStoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Story'
    PatchedChatHistory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        bot_response:
          type: string
          readOnly: true
        sent_by:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        message:
          type: string
        createdAt:
          type: string
          format: date-time
          readOnly: true
        room:
          type: integer
    PatchedChatRoom:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        shop:
          type: integer
    PatchedComment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          readOnly: true
        reel:
          type: integer
        text:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        like_count:
          type: integer
          readOnly: true
        parent:
          type: integer
          nullable: true
        replies:
          type: object
          additionalProperties: {}
          description: Return nested list of reply comments.
          readOnly: true
    PatchedCustomersDetailsModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 300
        phone_number:
          type: string
          nullable: true
          maxLength: 20
        birth_date:
          type: string
          format: date
          nullable: true
        gender:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/GenderEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        profile_photo:
          type: string
          format: uri
          nullable: true
        customer_type:
          $ref: '#/components/schemas/CustomerTypeEnum'
        address:
          type: string
          nullable: true
        user:
          type: integer
          nullable: true
        preferred_services:
          type: array
          items:
            type: integer
    PatchedEmployeeDetails:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        working_hours:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeWorkingHours'
        roles:
          type: object
          additionalProperties: {}
          description: Return a list of role objects for this employee.
          readOnly: true
        name:
          type: string
          maxLength: 200
        position:
          type: string
          maxLength: 100
        salary:
          type: number
          format: double
        ai_performance_data:
          nullable: true
          description: AI performance analysis data
        created_at:
          type: string
          format: date-time
          readOnly: true
        user:
          type: integer
        company:
          type: integer
        shop:
          type: integer
    PatchedEmployeeRole:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        role:
          type: string
          maxLength: 100
        permissions:
          description: Permissions for the role
        employee:
          type: integer
        shop:
          type: integer
    PatchedNotifications:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        message:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        is_read:
          type: boolean
        user:
          type: integer
    PatchedReel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        shop:
          type: integer
        video:
          type: string
          format: uri
        caption:
          type: string
        thumbnail:
          type: string
          format: uri
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        like_count:
          type: integer
          readOnly: true
        view_count:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        share_count:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        save_count:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        ai_video_tags:
          nullable: true
          description: AI-generated tags for this video
        processed_video_url:
          type: string
          format: uri
          nullable: true
          description: URL for processed/transcoded video
          maxLength: 200
        analytics_data:
          nullable: true
          description: Advanced analytics data
    PatchedServiceBookingDetailsModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        booking_date:
          type: string
          format: date
        booking_time:
          type: string
          format: time
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
          nullable: true
        final_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        status:
          $ref: '#/components/schemas/ServiceBookingDetailsModelStatusEnum'
        payment_status:
          $ref: '#/components/schemas/PaymentStatusEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
        fraud_flag:
          type: boolean
          readOnly: true
        user:
          type: integer
          readOnly: true
          nullable: true
        customer:
          type: integer
        service:
          type: integer
    PatchedServiceBookingDiscountCouponsModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        code:
          type: string
          maxLength: 20
        discount_type:
          $ref: '#/components/schemas/DiscountTypeEnum'
        discount_value:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
        max_usage:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        is_active:
          type: boolean
        apply_to_all_services:
          type: boolean
        shop:
          type: integer
        services:
          type: array
          items:
            type: integer
    PatchedServiceExtendedDetailsModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        service_name:
          type: string
          readOnly: true
        overviews:
          type: array
          items:
            $ref: '#/components/schemas/ServiceOverview'
          readOnly: true
        faqs:
          type: array
          items:
            $ref: '#/components/schemas/ServiceFAQ'
          readOnly: true
        process_steps:
          type: array
          items:
            $ref: '#/components/schemas/ServiceProcessStep'
          readOnly: true
        benefits:
          type: array
          items:
            $ref: '#/components/schemas/ServiceBenefit'
          readOnly: true
        aftercare_tips:
          type: array
          items:
            $ref: '#/components/schemas/ServiceAftercareTip'
          readOnly: true
        detailed_description:
          type: string
          nullable: true
          description: A detailed description of the service.
        updated_at:
          type: string
          format: date-time
        service:
          type: integer
    PatchedShopAds:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        target_gender:
          $ref: '#/components/schemas/TargetGenderEnum'
        title:
          type: string
          maxLength: 300
        description:
          type: string
        image:
          type: string
          format: uri
          nullable: true
        budget:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Total budget for the ad
        is_active:
          type: boolean
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
        latitude:
          type: number
          format: double
          nullable: true
        longitude:
          type: number
          format: double
          nullable: true
        ai_targeting_data:
          nullable: true
          description: AI targeting metadata for this ad
        shop:
          type: integer
        service:
          type: integer
          nullable: true
    PatchedShopAdsImpression:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        impression_type:
          $ref: '#/components/schemas/ImpressionTypeEnum'
        timestamp:
          type: string
          format: date-time
          readOnly: true
        ad:
          type: integer
        user:
          type: integer
    PatchedShopDetailsModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        employee_count:
          type: integer
          readOnly: true
        name:
          type: string
          title: Unique Name
          maxLength: 300
        description:
          type: string
          nullable: true
        note:
          type: string
          nullable: true
          maxLength: 300
        customer_service_phone:
          type: string
          nullable: true
          maxLength: 30
        address:
          type: string
          nullable: true
          maxLength: 300
        latitude:
          type: number
          format: double
          nullable: true
        longitude:
          type: number
          format: double
          nullable: true
        cover_image:
          type: string
          format: uri
          nullable: true
        avatar_image:
          type: string
          format: uri
          nullable: true
        username:
          type: string
          maxLength: 20
        shop_name:
          type: string
          maxLength: 300
        country:
          type: string
          maxLength: 80
        city:
          type: string
          maxLength: 300
        district:
          type: string
          maxLength: 300
        customers_type:
          allOf:
          - $ref: '#/components/schemas/CustomersTypeEnum'
          title: Target Customers
        services_types:
          $ref: '#/components/schemas/ServicesTypesEnum'
        online_payment_requested:
          type: boolean
          title: Receive Online Payments
        bank_details_document:
          type: string
          format: uri
          nullable: true
        online_payment_status:
          allOf:
          - $ref: '#/components/schemas/OnlinePaymentStatusEnum'
          title: Online Payment Approval Status
        ai_recommendations:
          nullable: true
          description: AI recommendation metadata
        ai_personalization:
          nullable: true
          description: AI personalization metadata
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Creation timestamp
        manager_phone_number:
          type: string
          nullable: true
          description: Manager Phone Number (used for branch login)
          maxLength: 20
        owner:
          type: integer
        company:
          type: integer
    PatchedShopFollow:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        shop:
          allOf:
          - $ref: '#/components/schemas/ShopDetailsModel'
          readOnly: true
        shop_id:
          type: integer
          writeOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedShopGalleryImagesModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        image:
          type: string
          format: uri
        shop:
          type: integer
    PatchedShopServiceCategoryModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        created_at:
          type: string
          format: date-time
          readOnly: true
        forecast_data:
          readOnly: true
          nullable: true
    PatchedShopServiceDetailsModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        time_slots:
          type: array
          items:
            $ref: '#/components/schemas/ShopServiceTimeSlot'
          readOnly: true
        bookings_count:
          type: integer
          readOnly: true
        duration:
          type: string
        service_type:
          $ref: '#/components/schemas/ServiceTypeEnum'
        name:
          type: string
          maxLength: 300
        name_arabic:
          type: string
          maxLength: 300
        description:
          type: string
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        is_available:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        forecast_data:
          readOnly: true
          nullable: true
        shop:
          type: integer
        category:
          type: integer
        specialists:
          type: array
          items:
            type: integer
    PatchedShopServiceGalleryModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        file:
          type: string
          format: uri
        service:
          type: integer
    PatchedShopSpecialistDetailsModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        speciality:
          type: string
          maxLength: 300
        service_location:
          $ref: '#/components/schemas/ServiceLocationEnum'
        is_active:
          type: boolean
          title: Active
        avatar_image:
          type: string
          format: uri
          nullable: true
        rating:
          type: number
          format: double
        shop:
          type: array
          items:
            type: integer
            title: Shops
          title: Shops
        specialist_type:
          type: array
          items:
            type: integer
            title: Specialist Type
        services:
          type: array
          items:
            type: integer
    PatchedSpecialistTypes:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 300
    PatchedStory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        view_count:
          type: integer
          readOnly: true
        video:
          type: string
          format: uri
          nullable: true
        image:
          type: string
          format: uri
          nullable: true
        caption:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        expires_at:
          type: string
          format: date-time
          nullable: true
          description: Story expires 24 hours after creation
        ai_video_tags:
          nullable: true
          description: AI-generated tags for story video
        analytics_data:
          nullable: true
          description: Advanced analytics data
        shop:
          type: integer
        viewed_by:
          type: array
          items:
            type: integer
    PaymentCreateRequest:
      type: object
      properties:
        payment_for:
          $ref: '#/components/schemas/PaymentForEnum'
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        source:
          type: object
          additionalProperties:
            type: string
        metadata:
          type: object
          additionalProperties:
            type: string
        description:
          type: string
      required:
      - amount
      - payment_for
    PaymentCreateResponse:
      type: object
      properties:
        payment:
          type: object
          additionalProperties: {}
        payment_record_id:
          type: integer
      required:
      - payment
      - payment_record_id
    PaymentForEnum:
      enum:
      - subscription
      - ads
      - merchant
      type: string
      description: |-
        * `subscription` - subscription
        * `ads` - ads
        * `merchant` - merchant
    PaymentProcessingRequest:
      type: object
      properties:
        payment_id:
          type: string
        payment_for:
          $ref: '#/components/schemas/PaymentForEnum'
      required:
      - payment_for
      - payment_id
    PaymentProcessingResponse:
      type: object
      properties:
        payment_status:
          type: string
      required:
      - payment_status
    PaymentStatusEnum:
      enum:
      - unpaid
      - pending
      - paid
      type: string
      description: |-
        * `unpaid` - Unpaid
        * `pending` - Pending
        * `paid` - Paid
    PersonalizationRequest:
      type: object
      properties:
        user_id:
          type: integer
      required:
      - user_id
    PersonalizationResponse:
      type: object
      properties:
        recommendations:
          type: array
          items:
            type: object
            additionalProperties: {}
      required:
      - recommendations
    RecommendationResponse:
      type: object
      properties:
        recommendations:
          type: array
          items:
            type: object
            additionalProperties: {}
      required:
      - recommendations
    Reel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        shop:
          type: integer
        video:
          type: string
          format: uri
        caption:
          type: string
        thumbnail:
          type: string
          format: uri
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        like_count:
          type: integer
          readOnly: true
        view_count:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        share_count:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        save_count:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        ai_video_tags:
          nullable: true
          description: AI-generated tags for this video
        processed_video_url:
          type: string
          format: uri
          nullable: true
          description: URL for processed/transcoded video
          maxLength: 200
        analytics_data:
          nullable: true
          description: Advanced analytics data
      required:
      - created_at
      - id
      - like_count
      - shop
      - video
    RegisterCompanyRequest:
      type: object
      properties:
        user_id:
          type: integer
        name:
          type: string
          maxLength: 300
        description:
          type: string
        address:
          type: string
        merchant_type:
          $ref: '#/components/schemas/MerchantTypeEnum'
      required:
      - merchant_type
      - name
      - user_id
    RegisterCompanyResponse:
      type: object
      properties:
        company:
          $ref: '#/components/schemas/CompanyDetailsModel'
      required:
      - company
    RegisterUserRequest:
      type: object
      properties:
        phone_number:
          type: string
        password:
          type: string
          writeOnly: true
        otp:
          type: string
      required:
      - otp
      - password
      - phone_number
    RegisterUserResponse:
      type: object
      properties:
        message:
          type: string
        user_id:
          type: integer
        access:
          type: string
        refresh:
          type: string
      required:
      - access
      - message
      - refresh
      - user_id
    RegistrationOTPResponse:
      type: object
      properties:
        message:
          type: string
        otp:
          type: string
      required:
      - message
    Review:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        title:
          type: string
          description: Short title for the review
          maxLength: 255
        rating:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Rating (1 to 5 stars)
        comment:
          type: string
          nullable: true
          description: Detailed review text
        created_at:
          type: string
          format: date-time
          readOnly: true
        content_type:
          type: string
          title: Python model class name
        object_id:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        sentiment_score:
          type: number
          format: double
          readOnly: true
          nullable: true
          description: Sentiment analysis score
      required:
      - content_type
      - created_at
      - id
      - object_id
      - rating
      - sentiment_score
      - title
      - user
    SentimentEnum:
      enum:
      - positive
      - neutral
      - negative
      type: string
      description: |-
        * `positive` - Positive
        * `neutral` - Neutral
        * `negative` - Negative
    SentimentRequest:
      type: object
      properties:
        text:
          type: string
      required:
      - text
    SentimentResponse:
      type: object
      properties:
        sentiment:
          $ref: '#/components/schemas/SentimentEnum'
        score:
          type: number
          format: double
      required:
      - score
      - sentiment
    ServiceAftercareTip:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        tip_text:
          type: string
          maxLength: 300
        order_index:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        extended_details:
          type: integer
      required:
      - extended_details
      - id
      - tip_text
    ServiceBenefit:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        benefit_text:
          type: string
          maxLength: 300
        order_index:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        extended_details:
          type: integer
      required:
      - benefit_text
      - extended_details
      - id
    ServiceBookingDetailsModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        booking_date:
          type: string
          format: date
        booking_time:
          type: string
          format: time
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
          nullable: true
        final_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        status:
          $ref: '#/components/schemas/ServiceBookingDetailsModelStatusEnum'
        payment_status:
          $ref: '#/components/schemas/PaymentStatusEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
        fraud_flag:
          type: boolean
          readOnly: true
        user:
          type: integer
          readOnly: true
          nullable: true
        customer:
          type: integer
        service:
          type: integer
      required:
      - booking_date
      - booking_time
      - created_at
      - customer
      - final_amount
      - fraud_flag
      - id
      - price
      - service
      - user
    ServiceBookingDetailsModelStatusEnum:
      enum:
      - requested
      - booked
      - completed
      - cancelled
      type: string
      description: |-
        * `requested` - Requested
        * `booked` - Booked
        * `completed` - Completed
        * `cancelled` - Cancelled
    ServiceBookingDiscountCouponsModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        code:
          type: string
          maxLength: 20
        discount_type:
          $ref: '#/components/schemas/DiscountTypeEnum'
        discount_value:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
        max_usage:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        is_active:
          type: boolean
        apply_to_all_services:
          type: boolean
        shop:
          type: integer
        services:
          type: array
          items:
            type: integer
      required:
      - code
      - discount_type
      - discount_value
      - end_date
      - id
      - shop
    ServiceExtendedDetailsModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        service_name:
          type: string
          readOnly: true
        overviews:
          type: array
          items:
            $ref: '#/components/schemas/ServiceOverview'
          readOnly: true
        faqs:
          type: array
          items:
            $ref: '#/components/schemas/ServiceFAQ'
          readOnly: true
        process_steps:
          type: array
          items:
            $ref: '#/components/schemas/ServiceProcessStep'
          readOnly: true
        benefits:
          type: array
          items:
            $ref: '#/components/schemas/ServiceBenefit'
          readOnly: true
        aftercare_tips:
          type: array
          items:
            $ref: '#/components/schemas/ServiceAftercareTip'
          readOnly: true
        detailed_description:
          type: string
          nullable: true
          description: A detailed description of the service.
        updated_at:
          type: string
          format: date-time
        service:
          type: integer
      required:
      - aftercare_tips
      - benefits
      - faqs
      - id
      - overviews
      - process_steps
      - service
      - service_name
    ServiceFAQ:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        question:
          type: string
          description: The FAQ question
          maxLength: 300
        answer:
          type: string
          description: The answer to the FAQ question
        order_index:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Order index for display
        extended_details:
          type: integer
      required:
      - answer
      - extended_details
      - id
      - question
    ServiceLocationEnum:
      enum:
      - in_store
      - at_shop
      - both
      type: string
      description: |-
        * `in_store` - In Store
        * `at_shop` - At Shop
        * `both` - Both
    ServiceOverview:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          description: Title of the overview item
          maxLength: 200
        image:
          type: string
          format: uri
          nullable: true
          description: Optional image for the overview item
        description:
          type: string
          description: Optional description for the overview item
        order_index:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Order index for display
        extended_details:
          type: integer
      required:
      - extended_details
      - id
      - title
    ServiceProcessStep:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        order_index:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Order index for display
        title:
          type: string
          description: Title of the process step
          maxLength: 200
        image:
          type: string
          format: uri
          nullable: true
          description: Optional image for the step
        description:
          type: string
          description: Description of this process step
        extended_details:
          type: integer
      required:
      - extended_details
      - id
      - title
    ServiceTypeEnum:
      enum:
      - in_shop
      - at_home
      - both
      type: string
      description: |-
        * `in_shop` - In Shop
        * `at_home` - At Home
        * `both` - Both
    ServicesTypesEnum:
      enum:
      - in_shop
      - at_home
      - both
      type: string
      description: |-
        * `in_shop` - In Shop
        * `at_home` - At Home
        * `both` - Both
    ShopAds:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        target_gender:
          $ref: '#/components/schemas/TargetGenderEnum'
        title:
          type: string
          maxLength: 300
        description:
          type: string
        image:
          type: string
          format: uri
          nullable: true
        budget:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Total budget for the ad
        is_active:
          type: boolean
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
        latitude:
          type: number
          format: double
          nullable: true
        longitude:
          type: number
          format: double
          nullable: true
        ai_targeting_data:
          nullable: true
          description: AI targeting metadata for this ad
        shop:
          type: integer
        service:
          type: integer
          nullable: true
      required:
      - budget
      - description
      - end_date
      - id
      - shop
      - title
    ShopAdsImpression:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        impression_type:
          $ref: '#/components/schemas/ImpressionTypeEnum'
        timestamp:
          type: string
          format: date-time
          readOnly: true
        ad:
          type: integer
        user:
          type: integer
      required:
      - ad
      - id
      - timestamp
      - user
    ShopDetailsModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        employee_count:
          type: integer
          readOnly: true
        name:
          type: string
          title: Unique Name
          maxLength: 300
        description:
          type: string
          nullable: true
        note:
          type: string
          nullable: true
          maxLength: 300
        customer_service_phone:
          type: string
          nullable: true
          maxLength: 30
        address:
          type: string
          nullable: true
          maxLength: 300
        latitude:
          type: number
          format: double
          nullable: true
        longitude:
          type: number
          format: double
          nullable: true
        cover_image:
          type: string
          format: uri
          nullable: true
        avatar_image:
          type: string
          format: uri
          nullable: true
        username:
          type: string
          maxLength: 20
        shop_name:
          type: string
          maxLength: 300
        country:
          type: string
          maxLength: 80
        city:
          type: string
          maxLength: 300
        district:
          type: string
          maxLength: 300
        customers_type:
          allOf:
          - $ref: '#/components/schemas/CustomersTypeEnum'
          title: Target Customers
        services_types:
          $ref: '#/components/schemas/ServicesTypesEnum'
        online_payment_requested:
          type: boolean
          title: Receive Online Payments
        bank_details_document:
          type: string
          format: uri
          nullable: true
        online_payment_status:
          allOf:
          - $ref: '#/components/schemas/OnlinePaymentStatusEnum'
          title: Online Payment Approval Status
        ai_recommendations:
          nullable: true
          description: AI recommendation metadata
        ai_personalization:
          nullable: true
          description: AI personalization metadata
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Creation timestamp
        manager_phone_number:
          type: string
          nullable: true
          description: Manager Phone Number (used for branch login)
          maxLength: 20
        owner:
          type: integer
        company:
          type: integer
      required:
      - company
      - created_at
      - employee_count
      - id
      - name
      - owner
    ShopFollow:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        shop:
          allOf:
          - $ref: '#/components/schemas/ShopDetailsModel'
          readOnly: true
        shop_id:
          type: integer
          writeOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - shop
      - shop_id
    ShopGalleryImagesModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        image:
          type: string
          format: uri
        shop:
          type: integer
      required:
      - id
      - image
      - shop
    ShopServiceCategoryModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        created_at:
          type: string
          format: date-time
          readOnly: true
        forecast_data:
          readOnly: true
          nullable: true
      required:
      - created_at
      - forecast_data
      - id
      - name
    ShopServiceDetailsModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        time_slots:
          type: array
          items:
            $ref: '#/components/schemas/ShopServiceTimeSlot'
          readOnly: true
        bookings_count:
          type: integer
          readOnly: true
        duration:
          type: string
        service_type:
          $ref: '#/components/schemas/ServiceTypeEnum'
        name:
          type: string
          maxLength: 300
        name_arabic:
          type: string
          maxLength: 300
        description:
          type: string
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        is_available:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        forecast_data:
          readOnly: true
          nullable: true
        shop:
          type: integer
        category:
          type: integer
        specialists:
          type: array
          items:
            type: integer
      required:
      - bookings_count
      - category
      - created_at
      - duration
      - forecast_data
      - id
      - name
      - price
      - shop
      - time_slots
    ShopServiceGalleryModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        file:
          type: string
          format: uri
        service:
          type: integer
      required:
      - file
      - id
      - service
    ShopServiceTimeSlot:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        day:
          $ref: '#/components/schemas/DayEnum'
        start_time:
          type: string
          format: time
        end_time:
          type: string
          format: time
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - day
      - end_time
      - id
      - start_time
    ShopSpecialistDetailsModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        speciality:
          type: string
          maxLength: 300
        service_location:
          $ref: '#/components/schemas/ServiceLocationEnum'
        is_active:
          type: boolean
          title: Active
        avatar_image:
          type: string
          format: uri
          nullable: true
        rating:
          type: number
          format: double
        shop:
          type: array
          items:
            type: integer
            title: Shops
          title: Shops
        specialist_type:
          type: array
          items:
            type: integer
            title: Specialist Type
        services:
          type: array
          items:
            type: integer
      required:
      - id
      - services
      - shop
      - specialist_type
      - speciality
    SpecialistTypes:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 300
      required:
      - id
      - name
    Story:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        view_count:
          type: integer
          readOnly: true
        video:
          type: string
          format: uri
          nullable: true
        image:
          type: string
          format: uri
          nullable: true
        caption:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        expires_at:
          type: string
          format: date-time
          nullable: true
          description: Story expires 24 hours after creation
        ai_video_tags:
          nullable: true
          description: AI-generated tags for story video
        analytics_data:
          nullable: true
          description: Advanced analytics data
        shop:
          type: integer
        viewed_by:
          type: array
          items:
            type: integer
      required:
      - created_at
      - id
      - shop
      - view_count
    SubscriptionPaymentIntegrationRequest:
      type: object
      description: Request payload for associating a payment with a subscription.
      properties:
        company:
          type: integer
        plan:
          type: integer
        billing_cycle:
          $ref: '#/components/schemas/BillingCycleEnum'
        payment_id:
          type: string
        status:
          type: string
      required:
      - billing_cycle
      - company
      - payment_id
      - plan
      - status
    SubscriptionPaymentIntegrationResponse:
      type: object
      description: Response after integrating a subscription payment.
      properties:
        message:
          type: string
        plan:
          type: integer
        payment_id:
          type: string
        status:
          type: string
      required:
      - message
      - payment_id
      - plan
      - status
    TargetGenderEnum:
      enum:
      - male
      - female
      - both
      type: string
      description: |-
        * `male` - Male
        * `female` - Female
        * `both` - Both
    TestResponse:
      type: object
      properties:
        name:
          type: string
      required:
      - name
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    UnifiedLoginRequest:
      type: object
      properties:
        phone_number:
          type: string
        otp:
          type: string
      required:
      - otp
      - phone_number
    UnifiedLoginResponse:
      type: object
      properties:
        message:
          type: string
        access:
          type: string
        refresh:
          type: string
        roles:
          type: array
          items:
            type: string
      required:
      - access
      - message
      - refresh
      - roles
    UpdateProfileSuggestRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
      - password
      - username
    UpdateProfileSuggestResponse:
      type: object
      properties:
        message:
          type: string
      required:
      - message
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
      required:
      - id
      - username
    UserMasterDetailsResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        customer_details:
          type: object
          additionalProperties: {}
          nullable: true
        company_details:
          type: object
          additionalProperties: {}
          nullable: true
        employee_details:
          type: object
          additionalProperties: {}
          nullable: true
        subscription_details:
          type: object
          additionalProperties: {}
          nullable: true
      required:
      - company_details
      - customer_details
      - employee_details
      - subscription_details
      - user
    UsersAppRegisterUserRequest:
      type: object
      properties:
        name:
          type: string
        phone_number:
          type: string
        otp:
          type: string
      required:
      - name
      - otp
      - phone_number
    UsersAppRegisterUserResponse:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        name:
          type: string
        phone_number:
          type: string
      required:
      - id
      - name
      - phone_number
      - username
    WebhookData:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
        amount:
          type: string
        metadata:
          $ref: '#/components/schemas/WebhookMetadata'
      required:
      - amount
      - id
      - metadata
      - status
    WebhookMetadata:
      type: object
      properties:
        payment_for:
          type: string
        payment_type:
          type: string
        bill_name:
          type: string
        phone_number:
          type: string
        email:
          type: string
          format: email
        address:
          type: string
        billing_cycle:
          type: string
      required:
      - payment_for
    WebhookRequest:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/WebhookData'
      required:
      - data
    WebhookResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
      required:
      - message
      - status
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
